package com.sofis.entities.data;

import java.io.Serializable;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlRootElement;

/**
 *
 * @author Usuario
 */
@Entity
@Table(name = "prog_editor")
@XmlRootElement
@NamedQueries({
    @NamedQuery(name = "ProgEditor.findAll", query = "SELECT p FROM ProgEditor p"),
    @NamedQuery(name = "ProgEditor.findByEdiProgDesc", query = "SELECT p FROM ProgEditor p WHERE p.ediProgDesc = :ediProgDesc"),
    @NamedQuery(name = "ProgEditor.findByEdiProgAlcance", query = "SELECT p FROM ProgEditor p WHERE p.ediProgAlcance = :ediProgAlcance"),
    @NamedQuery(name = "ProgEditor.findByEdiProgBeneficios", query = "SELECT p FROM ProgEditor p WHERE p.ediProgBeneficios = :ediProgBeneficios"),
    @NamedQuery(name = "ProgEditor.findByEdiProgQuienesIntegran", query = "SELECT p FROM ProgEditor p WHERE p.ediProgQuienesIntegran = :ediProgQuienesIntegran"),
    @NamedQuery(name = "ProgEditor.findByEdiProgRolOrganismo", query = "SELECT p FROM ProgEditor p WHERE p.ediProgRolOrganismo = :ediProgRolOrganismo")})
public class ProgEditor implements Serializable {
    
    private static final long serialVersionUID = 1L;
    @Id
    @Basic(optional = false)
    @NotNull
    @Column(name = "edi_prog_fk")
    private Integer ediProgFk;
    
    @Size(max = 4000)
    @Column(name = "edi_prog_desc")
    private String ediProgDesc;
    @Size(max = 4000)
    @Column(name = "edi_prog_alcance")
    private String ediProgAlcance;
    @Size(max = 4000)
    @Column(name = "edi_prog_beneficios")
    private String ediProgBeneficios;
    @Size(max = 4000)
    @Column(name = "edi_prog_quienes_integran")
    private String ediProgQuienesIntegran;
    @Size(max = 4000)
    @Column(name = "edi_prog_rol_organismo")
    private String ediProgRolOrganismo;

    public ProgEditor() {
    }

    public ProgEditor(Integer ediProgFk) {
        this.ediProgFk = ediProgFk;
    }

    public ProgEditor(Integer ediProgFk, String ediProgDesc, String ediProgAlcance, String ediProgBeneficios, String ediProgQuienesIntegran, String ediProgRolOrganismo) {
        this.ediProgFk = ediProgFk;
        this.ediProgDesc = ediProgDesc;
        this.ediProgAlcance = ediProgAlcance;
        this.ediProgBeneficios = ediProgBeneficios;
        this.ediProgQuienesIntegran = ediProgQuienesIntegran;
        this.ediProgRolOrganismo = ediProgRolOrganismo;
    }

    public Integer getEdiProgFk() {
        return ediProgFk;
    }

    public void setEdiProgFk(Integer ediProgFk) {
        this.ediProgFk = ediProgFk;
    }

    public String getEdiProgDesc() {
        return ediProgDesc;
    }

    public void setEdiProgDesc(String ediProgDesc) {
        this.ediProgDesc = ediProgDesc;
    }

    public String getEdiProgAlcance() {
        return ediProgAlcance;
    }

    public void setEdiProgAlcance(String ediProgAlcance) {
        this.ediProgAlcance = ediProgAlcance;
    }

    public String getEdiProgBeneficios() {
        return ediProgBeneficios;
    }

    public void setEdiProgBeneficios(String ediProgBeneficios) {
        this.ediProgBeneficios = ediProgBeneficios;
    }

    public String getEdiProgQuienesIntegran() {
        return ediProgQuienesIntegran;
    }

    public void setEdiProgQuienesIntegran(String ediProgQuienesIntegran) {
        this.ediProgQuienesIntegran = ediProgQuienesIntegran;
    }

    public String getEdiProgRolOrganismo() {
        return ediProgRolOrganismo;
    }

    public void setEdiProgRolOrganismo(String ediProgRolOrganismo) {
        this.ediProgRolOrganismo = ediProgRolOrganismo;
    }

    @Override
    public int hashCode() {
        int hash = 0;
        hash += (ediProgFk != null ? ediProgFk.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof ProgEditor)) {
            return false;
        }
        ProgEditor other = (ProgEditor) object;
        if ((this.ediProgFk == null && other.ediProgFk != null) || (this.ediProgFk != null && !this.ediProgFk.equals(other.ediProgFk))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "com.sofis.entities.data.ProgEditor[ ediProgFk=" + ediProgFk + " ]";
    }
    
}
