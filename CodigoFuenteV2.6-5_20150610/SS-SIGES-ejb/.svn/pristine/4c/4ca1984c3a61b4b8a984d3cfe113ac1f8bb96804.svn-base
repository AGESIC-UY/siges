package com.sofis.business.ejbs;

import com.sofis.business.interceptors.LoggedInterceptor;
import com.sofis.data.daos.RolesInteresadosDAO;
import com.sofis.entities.constantes.ConstanteApp;
import com.sofis.entities.data.RolesInteresados;
import com.sofis.exceptions.GeneralException;
import com.sofis.exceptions.TechnicalException;
import com.sofis.persistence.dao.exceptions.DAOGeneralException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import javax.inject.Named;
import javax.interceptor.Interceptors;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

/**
 *
 * @author Usuario
 */
@Named
@Stateless(name = "RolesInteresadosBean")
@LocalBean
@Interceptors({LoggedInterceptor.class})
public class RolesInteresadosBean {

    @PersistenceContext(unitName = ConstanteApp.PERSISTENCE_CONTEXT_UNIT_NAME)
    private EntityManager em;
    private static final Logger logger = Logger.getLogger(ConstanteApp.LOGGER_NAME);

    /**
     * Devuelve el elemento RolesInteresados por el ID
     *
     * @param rolIntId
     * @return
     * @throws GeneralException
     */
    public RolesInteresados obtenerRolesInteresadosPorId(Integer rolIntId) throws GeneralException {
        RolesInteresadosDAO rolesInteresadosDAO = new RolesInteresadosDAO(em);
        try {
            return rolesInteresadosDAO.findById(RolesInteresados.class, rolIntId);
        } catch (DAOGeneralException ex) {
            logger.logp(Level.SEVERE, RolesInteresadosBean.class.getName(), "obtenerRolesInteresadosPorId", ex.getMessage(), ex);
            TechnicalException te = new TechnicalException();
            te.addError(ex.getMessage());
            throw te;
        }

    }

    /**
     * Devuelve todos los elementos de tipo RolesInteresados
     *
     * @return
     * @throws GeneralException
     */
    public List<RolesInteresados> obtenerTodos() throws GeneralException {
        RolesInteresadosDAO rolesInteresadosDAO = new RolesInteresadosDAO(em);
        try {
            return rolesInteresadosDAO.findAll(RolesInteresados.class);
        } catch (Exception ex) {
            logger.logp(Level.SEVERE, RolesInteresadosBean.class.getName(), "obtenerTodos", ex.getMessage(), ex);
            TechnicalException te = new TechnicalException();
            te.addError(ex.getMessage());
            throw te;
        }
    }

    public List<RolesInteresados> obtenerRolPorOrganizacionId(Integer orgaId) {
        RolesInteresadosDAO rolesInteresadosDAO = new RolesInteresadosDAO(em);
        try {
            return rolesInteresadosDAO.findByOneProperty(RolesInteresados.class, "rolintOrgFk.orgPk", orgaId);
        } catch (Exception ex) {
            logger.logp(Level.SEVERE, RolesInteresadosBean.class.getName(), "obtenerRolPorOrganizacionId", ex.getMessage(), ex);
            TechnicalException te = new TechnicalException();
            te.addError(ex.getMessage());
            throw te;
        }
    }
}
