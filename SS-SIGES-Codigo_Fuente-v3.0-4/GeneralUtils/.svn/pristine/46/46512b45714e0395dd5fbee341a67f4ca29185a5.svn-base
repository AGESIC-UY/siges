package com.sofis.generico.utils.generalutils;

/**
 *
 * @author Usuario
 */
public class StringsUtils {
    
    public static boolean isEmpty(String s) {
        return (s == null) || (s.trim().length() == 0);
    }
    
    public static boolean sonStringIguales(String s1, String s2) {
        if (s1 != null) {
            if (s2 != null) {
                return s1.equals(s2);
            } else {
                return false;
            }
        } else {
            return s2 == null;
        }
    }
    
    public static String normalizarString(String s) {
        if (s != null) {
            return s.replaceAll("[ ]+", " ").trim();
        }
        return null;
    }
    
    public static String normalizarStringMayuscula(String s) {
        if (s != null) {
            return normalizarString(s).toUpperCase();
        }
        return null;
    }
    
    public static String toString(Object o) {
        String s = o != null ? String.valueOf(o) : "";
        return toString(s);
    }
    
    public static String toString(String s) {
        return s != null ? s : "";
    }
    
    public static String toCleanString(String s) {
        if (s == null) {
            return "";
        }
        s = s.replaceAll("\n", " ");
        s = s.replaceAll("\t", " ");
        s = s.replaceAll("\r", " ");
        return s;
    }

    /**
     * Concatena con StringBuffer los String aportados.
     *
     * @param s
     * @return String
     */
    public static String concat(String... s) {
        StringBuffer result = new StringBuffer();
        
        for (String str : s) {
            if (str != null) {
                result.append(str);
            }
        }
        
        return result.toString();
    }
    
    public static String recortarTexto(String s, int largo) {
        if (s == null || s.length() <= largo) {
            return s;
        } else {
            return concat(s.substring(0, (largo - 3)), "...");
        }
    }
}
