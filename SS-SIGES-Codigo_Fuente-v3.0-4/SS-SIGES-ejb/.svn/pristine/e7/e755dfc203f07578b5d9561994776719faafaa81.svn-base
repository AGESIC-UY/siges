package com.sofis.business.ejbs;

import com.sofis.business.interceptors.LoggedInterceptor;
import com.sofis.data.daos.AmbitoDAO;
import com.sofis.entities.constantes.ConstanteApp;
import com.sofis.entities.data.Ambito;
import com.sofis.entities.data.Areas;
import com.sofis.exceptions.GeneralException;
import com.sofis.exceptions.TechnicalException;
import com.sofis.persistence.dao.exceptions.DAOGeneralException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import javax.inject.Inject;
import javax.inject.Named;
import javax.interceptor.Interceptors;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

/**
 *
 * @author Usuario
 */
@Named
@Stateless(name = "AmbitoBean")
@LocalBean
@Interceptors({LoggedInterceptor.class})
public class AmbitoBean {

    @Inject
    private ConsultaHistorico<Areas> ch;
    @PersistenceContext(unitName = ConstanteApp.PERSISTENCE_CONTEXT_UNIT_NAME)
    private EntityManager em;
    private static final Logger logger = Logger.getLogger(ConstanteApp.LOGGER_NAME);

    public Ambito obtenerAmbitoPorId(Integer ambitoPk) throws GeneralException {
        AmbitoDAO dao = new AmbitoDAO(em);
        try {
            Ambito ambito = dao.findById(Ambito.class, ambitoPk);
            return ambito;

        } catch (DAOGeneralException ex) {
            logger.getLogger(AmbitoBean.class.getName()).log(Level.SEVERE, null, ex);
            TechnicalException te = new TechnicalException();
            te.addError(ex.getMessage());
            throw te;
        }
    }

    public List<Ambito> obtenerAmbitoTodos() throws GeneralException {
        AmbitoDAO dao = new AmbitoDAO(em);
        try {
            List<Ambito> result = dao.findAll(Ambito.class, "ambNombre");
            return result;

        } catch (DAOGeneralException ex) {
            logger.getLogger(AmbitoBean.class.getName()).log(Level.SEVERE, null, ex);
            TechnicalException te = new TechnicalException();
            te.addError(ex.getMessage());
            throw te;
        }
    }
}
